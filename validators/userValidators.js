const emailValidator = require("email-validator");const userDB = require('../models/userSchema')module.exports = {    userRegisterValidator: async (req, res, next) => {        const {username, email, photo, password, passwordTwo} = req.body        if (username.length < 4 || username.length > 20) {            return res.send({success: false, message: "Username should be min 4 max 20 characters"})        }        const usernameExists = await userDB.findOne({username})        if (usernameExists) return res.send({success: false, message: 'Username exists'})        if (!emailValidator.validate(email)) return res.send({            success: false,            message: 'Email should be like "email@email.com"'        })        const emailExists = await userDB.findOne({email})        if (emailExists) return res.send({success: false, message: "Email exists"})        if (!photo.includes('http')) return res.send({success: false, message: "Photo link should include \"http\""})        if (password.length < 4 || password.length > 25) return res.send({            success: false,            message: "Password should be min 4 max 25 characters"        })        if (password !== passwordTwo) return res.send({success: false, message: 'Passwords should match'})        next()    },    userLoginValidation: (req, res, next) => {        const {email, password} = req.body        if (!emailValidator.validate(email)) return res.send({            success: false,            message: 'Email should be like "email@email.com"'        })        if (password.length < 4 || password.length > 25) return res.send({            success: false,            message: "Password should be min 4 max 25 characters"        })        next()    }}